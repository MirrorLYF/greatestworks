// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.1
// source: proto/messages.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 消息号枚举 - 系统消息 (0x0000 - 0x00FF)
type SystemMessageID int32

const (
	SystemMessageID_SYSTEM_MESSAGE_ID_UNSPECIFIED SystemMessageID = 0
	SystemMessageID_MSG_HEARTBEAT                 SystemMessageID = 1  // 心跳消息
	SystemMessageID_MSG_HANDSHAKE                 SystemMessageID = 2  // 握手消息
	SystemMessageID_MSG_AUTH                      SystemMessageID = 3  // 认证消息
	SystemMessageID_MSG_DISCONNECT                SystemMessageID = 4  // 断开连接
	SystemMessageID_MSG_ERROR                     SystemMessageID = 5  // 错误消息
	SystemMessageID_MSG_PING                      SystemMessageID = 6  // Ping消息
	SystemMessageID_MSG_PONG                      SystemMessageID = 7  // Pong消息
	SystemMessageID_MSG_SYSTEM_INFO               SystemMessageID = 8  // 系统信息
	SystemMessageID_MSG_SERVER_STATUS             SystemMessageID = 9  // 服务器状态
	SystemMessageID_MSG_MAINTENANCE               SystemMessageID = 10 // 维护通知
)

// Enum value maps for SystemMessageID.
var (
	SystemMessageID_name = map[int32]string{
		0:  "SYSTEM_MESSAGE_ID_UNSPECIFIED",
		1:  "MSG_HEARTBEAT",
		2:  "MSG_HANDSHAKE",
		3:  "MSG_AUTH",
		4:  "MSG_DISCONNECT",
		5:  "MSG_ERROR",
		6:  "MSG_PING",
		7:  "MSG_PONG",
		8:  "MSG_SYSTEM_INFO",
		9:  "MSG_SERVER_STATUS",
		10: "MSG_MAINTENANCE",
	}
	SystemMessageID_value = map[string]int32{
		"SYSTEM_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_HEARTBEAT":                 1,
		"MSG_HANDSHAKE":                 2,
		"MSG_AUTH":                      3,
		"MSG_DISCONNECT":                4,
		"MSG_ERROR":                     5,
		"MSG_PING":                      6,
		"MSG_PONG":                      7,
		"MSG_SYSTEM_INFO":               8,
		"MSG_SERVER_STATUS":             9,
		"MSG_MAINTENANCE":               10,
	}
)

func (x SystemMessageID) Enum() *SystemMessageID {
	p := new(SystemMessageID)
	*p = x
	return p
}

func (x SystemMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[0].Descriptor()
}

func (SystemMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[0]
}

func (x SystemMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemMessageID.Descriptor instead.
func (SystemMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{0}
}

// 消息号枚举 - 玩家相关消息 (0x0100 - 0x01FF)
type PlayerMessageID int32

const (
	PlayerMessageID_PLAYER_MESSAGE_ID_UNSPECIFIED PlayerMessageID = 0
	PlayerMessageID_MSG_PLAYER_LOGIN              PlayerMessageID = 257 // 玩家登录
	PlayerMessageID_MSG_PLAYER_LOGOUT             PlayerMessageID = 258 // 玩家登出
	PlayerMessageID_MSG_PLAYER_INFO               PlayerMessageID = 259 // 玩家信息
	PlayerMessageID_MSG_PLAYER_MOVE               PlayerMessageID = 260 // 玩家移动
	PlayerMessageID_MSG_PLAYER_CREATE             PlayerMessageID = 261 // 创建玩家
	PlayerMessageID_MSG_PLAYER_UPDATE             PlayerMessageID = 262 // 更新玩家
	PlayerMessageID_MSG_PLAYER_DELETE             PlayerMessageID = 263 // 删除玩家
	PlayerMessageID_MSG_PLAYER_STATUS             PlayerMessageID = 264 // 玩家状态
	PlayerMessageID_MSG_PLAYER_STATS              PlayerMessageID = 265 // 玩家属性
	PlayerMessageID_MSG_PLAYER_LEVEL              PlayerMessageID = 266 // 玩家升级
	PlayerMessageID_MSG_PLAYER_EXP_GAIN           PlayerMessageID = 267 // 玩家经验获得
	PlayerMessageID_MSG_PLAYER_SYNC               PlayerMessageID = 268 // 玩家同步
	PlayerMessageID_MSG_PLAYER_BAN                PlayerMessageID = 269 // 玩家封禁
	PlayerMessageID_MSG_PLAYER_UNBAN              PlayerMessageID = 270 // 玩家解封
	PlayerMessageID_MSG_PLAYER_GM_UPDATE          PlayerMessageID = 271 // GM更新玩家
)

// Enum value maps for PlayerMessageID.
var (
	PlayerMessageID_name = map[int32]string{
		0:   "PLAYER_MESSAGE_ID_UNSPECIFIED",
		257: "MSG_PLAYER_LOGIN",
		258: "MSG_PLAYER_LOGOUT",
		259: "MSG_PLAYER_INFO",
		260: "MSG_PLAYER_MOVE",
		261: "MSG_PLAYER_CREATE",
		262: "MSG_PLAYER_UPDATE",
		263: "MSG_PLAYER_DELETE",
		264: "MSG_PLAYER_STATUS",
		265: "MSG_PLAYER_STATS",
		266: "MSG_PLAYER_LEVEL",
		267: "MSG_PLAYER_EXP_GAIN",
		268: "MSG_PLAYER_SYNC",
		269: "MSG_PLAYER_BAN",
		270: "MSG_PLAYER_UNBAN",
		271: "MSG_PLAYER_GM_UPDATE",
	}
	PlayerMessageID_value = map[string]int32{
		"PLAYER_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_PLAYER_LOGIN":              257,
		"MSG_PLAYER_LOGOUT":             258,
		"MSG_PLAYER_INFO":               259,
		"MSG_PLAYER_MOVE":               260,
		"MSG_PLAYER_CREATE":             261,
		"MSG_PLAYER_UPDATE":             262,
		"MSG_PLAYER_DELETE":             263,
		"MSG_PLAYER_STATUS":             264,
		"MSG_PLAYER_STATS":              265,
		"MSG_PLAYER_LEVEL":              266,
		"MSG_PLAYER_EXP_GAIN":           267,
		"MSG_PLAYER_SYNC":               268,
		"MSG_PLAYER_BAN":                269,
		"MSG_PLAYER_UNBAN":              270,
		"MSG_PLAYER_GM_UPDATE":          271,
	}
)

func (x PlayerMessageID) Enum() *PlayerMessageID {
	p := new(PlayerMessageID)
	*p = x
	return p
}

func (x PlayerMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[1].Descriptor()
}

func (PlayerMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[1]
}

func (x PlayerMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerMessageID.Descriptor instead.
func (PlayerMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{1}
}

// 消息号枚举 - 战斗相关消息 (0x0200 - 0x02FF)
type BattleMessageID int32

const (
	BattleMessageID_BATTLE_MESSAGE_ID_UNSPECIFIED BattleMessageID = 0
	BattleMessageID_MSG_CREATE_BATTLE             BattleMessageID = 513 // 创建战斗
	BattleMessageID_MSG_JOIN_BATTLE               BattleMessageID = 514 // 加入战斗
	BattleMessageID_MSG_LEAVE_BATTLE              BattleMessageID = 515 // 离开战斗
	BattleMessageID_MSG_START_BATTLE              BattleMessageID = 516 // 开始战斗
	BattleMessageID_MSG_END_BATTLE                BattleMessageID = 517 // 结束战斗
	BattleMessageID_MSG_BATTLE_ACTION             BattleMessageID = 518 // 战斗行动
	BattleMessageID_MSG_BATTLE_RESULT             BattleMessageID = 519 // 战斗结果
	BattleMessageID_MSG_BATTLE_STATUS             BattleMessageID = 520 // 战斗状态
	BattleMessageID_MSG_SKILL_CAST                BattleMessageID = 521 // 技能释放
	BattleMessageID_MSG_DAMAGE_DEALT              BattleMessageID = 522 // 伤害计算
	BattleMessageID_MSG_BATTLE_ROUND              BattleMessageID = 523 // 战斗回合
	BattleMessageID_MSG_BATTLE_SYNC               BattleMessageID = 524 // 战斗同步
	BattleMessageID_MSG_BATTLE_SPECTATE           BattleMessageID = 525 // 观战
	BattleMessageID_MSG_BATTLE_REPLAY             BattleMessageID = 526 // 战斗回放
)

// Enum value maps for BattleMessageID.
var (
	BattleMessageID_name = map[int32]string{
		0:   "BATTLE_MESSAGE_ID_UNSPECIFIED",
		513: "MSG_CREATE_BATTLE",
		514: "MSG_JOIN_BATTLE",
		515: "MSG_LEAVE_BATTLE",
		516: "MSG_START_BATTLE",
		517: "MSG_END_BATTLE",
		518: "MSG_BATTLE_ACTION",
		519: "MSG_BATTLE_RESULT",
		520: "MSG_BATTLE_STATUS",
		521: "MSG_SKILL_CAST",
		522: "MSG_DAMAGE_DEALT",
		523: "MSG_BATTLE_ROUND",
		524: "MSG_BATTLE_SYNC",
		525: "MSG_BATTLE_SPECTATE",
		526: "MSG_BATTLE_REPLAY",
	}
	BattleMessageID_value = map[string]int32{
		"BATTLE_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_CREATE_BATTLE":             513,
		"MSG_JOIN_BATTLE":               514,
		"MSG_LEAVE_BATTLE":              515,
		"MSG_START_BATTLE":              516,
		"MSG_END_BATTLE":                517,
		"MSG_BATTLE_ACTION":             518,
		"MSG_BATTLE_RESULT":             519,
		"MSG_BATTLE_STATUS":             520,
		"MSG_SKILL_CAST":                521,
		"MSG_DAMAGE_DEALT":              522,
		"MSG_BATTLE_ROUND":              523,
		"MSG_BATTLE_SYNC":               524,
		"MSG_BATTLE_SPECTATE":           525,
		"MSG_BATTLE_REPLAY":             526,
	}
)

func (x BattleMessageID) Enum() *BattleMessageID {
	p := new(BattleMessageID)
	*p = x
	return p
}

func (x BattleMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[2].Descriptor()
}

func (BattleMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[2]
}

func (x BattleMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleMessageID.Descriptor instead.
func (BattleMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{2}
}

// 消息号枚举 - 宠物相关消息 (0x0300 - 0x03FF)
type PetMessageID int32

const (
	PetMessageID_PET_MESSAGE_ID_UNSPECIFIED PetMessageID = 0
	PetMessageID_MSG_PET_SUMMON             PetMessageID = 769 // 召唤宠物
	PetMessageID_MSG_PET_DISMISS            PetMessageID = 770 // 收回宠物
	PetMessageID_MSG_PET_INFO               PetMessageID = 771 // 宠物信息
	PetMessageID_MSG_PET_MOVE               PetMessageID = 772 // 宠物移动
	PetMessageID_MSG_PET_ACTION             PetMessageID = 773 // 宠物行动
	PetMessageID_MSG_PET_LEVEL_UP           PetMessageID = 774 // 宠物升级
	PetMessageID_MSG_PET_EVOLUTION          PetMessageID = 775 // 宠物进化
	PetMessageID_MSG_PET_TRAIN              PetMessageID = 776 // 宠物训练
	PetMessageID_MSG_PET_FEED               PetMessageID = 777 // 宠物喂养
	PetMessageID_MSG_PET_STATUS             PetMessageID = 778 // 宠物状态
	PetMessageID_MSG_PET_SKILL_LEARN        PetMessageID = 779 // 宠物技能学习
	PetMessageID_MSG_PET_SKILL_FORGET       PetMessageID = 780 // 宠物技能遗忘
	PetMessageID_MSG_PET_BOND               PetMessageID = 781 // 宠物羁绊
	PetMessageID_MSG_PET_SYNTHESIS          PetMessageID = 782 // 宠物合成
	PetMessageID_MSG_PET_SKIN_EQUIP         PetMessageID = 783 // 宠物皮肤装备
)

// Enum value maps for PetMessageID.
var (
	PetMessageID_name = map[int32]string{
		0:   "PET_MESSAGE_ID_UNSPECIFIED",
		769: "MSG_PET_SUMMON",
		770: "MSG_PET_DISMISS",
		771: "MSG_PET_INFO",
		772: "MSG_PET_MOVE",
		773: "MSG_PET_ACTION",
		774: "MSG_PET_LEVEL_UP",
		775: "MSG_PET_EVOLUTION",
		776: "MSG_PET_TRAIN",
		777: "MSG_PET_FEED",
		778: "MSG_PET_STATUS",
		779: "MSG_PET_SKILL_LEARN",
		780: "MSG_PET_SKILL_FORGET",
		781: "MSG_PET_BOND",
		782: "MSG_PET_SYNTHESIS",
		783: "MSG_PET_SKIN_EQUIP",
	}
	PetMessageID_value = map[string]int32{
		"PET_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_PET_SUMMON":             769,
		"MSG_PET_DISMISS":            770,
		"MSG_PET_INFO":               771,
		"MSG_PET_MOVE":               772,
		"MSG_PET_ACTION":             773,
		"MSG_PET_LEVEL_UP":           774,
		"MSG_PET_EVOLUTION":          775,
		"MSG_PET_TRAIN":              776,
		"MSG_PET_FEED":               777,
		"MSG_PET_STATUS":             778,
		"MSG_PET_SKILL_LEARN":        779,
		"MSG_PET_SKILL_FORGET":       780,
		"MSG_PET_BOND":               781,
		"MSG_PET_SYNTHESIS":          782,
		"MSG_PET_SKIN_EQUIP":         783,
	}
)

func (x PetMessageID) Enum() *PetMessageID {
	p := new(PetMessageID)
	*p = x
	return p
}

func (x PetMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PetMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[3].Descriptor()
}

func (PetMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[3]
}

func (x PetMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PetMessageID.Descriptor instead.
func (PetMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{3}
}

// 消息号枚举 - 建筑相关消息 (0x0400 - 0x04FF)
type BuildingMessageID int32

const (
	BuildingMessageID_BUILDING_MESSAGE_ID_UNSPECIFIED BuildingMessageID = 0
	BuildingMessageID_MSG_BUILDING_CREATE             BuildingMessageID = 1025 // 创建建筑
	BuildingMessageID_MSG_BUILDING_UPGRADE            BuildingMessageID = 1026 // 升级建筑
	BuildingMessageID_MSG_BUILDING_DESTROY            BuildingMessageID = 1027 // 摧毁建筑
	BuildingMessageID_MSG_BUILDING_INFO               BuildingMessageID = 1028 // 建筑信息
	BuildingMessageID_MSG_BUILDING_PRODUCE            BuildingMessageID = 1029 // 建筑生产
	BuildingMessageID_MSG_BUILDING_COLLECT            BuildingMessageID = 1030 // 收集资源
	BuildingMessageID_MSG_BUILDING_REPAIR             BuildingMessageID = 1031 // 修复建筑
	BuildingMessageID_MSG_BUILDING_STATUS             BuildingMessageID = 1032 // 建筑状态
	BuildingMessageID_MSG_BUILDING_SYNC               BuildingMessageID = 1033 // 建筑同步
	BuildingMessageID_MSG_BUILDING_MOVE               BuildingMessageID = 1034 // 建筑移动
	BuildingMessageID_MSG_BUILDING_ROTATE             BuildingMessageID = 1035 // 建筑旋转
	BuildingMessageID_MSG_BUILDING_UPGRADE_CANCEL     BuildingMessageID = 1036 // 取消升级
)

// Enum value maps for BuildingMessageID.
var (
	BuildingMessageID_name = map[int32]string{
		0:    "BUILDING_MESSAGE_ID_UNSPECIFIED",
		1025: "MSG_BUILDING_CREATE",
		1026: "MSG_BUILDING_UPGRADE",
		1027: "MSG_BUILDING_DESTROY",
		1028: "MSG_BUILDING_INFO",
		1029: "MSG_BUILDING_PRODUCE",
		1030: "MSG_BUILDING_COLLECT",
		1031: "MSG_BUILDING_REPAIR",
		1032: "MSG_BUILDING_STATUS",
		1033: "MSG_BUILDING_SYNC",
		1034: "MSG_BUILDING_MOVE",
		1035: "MSG_BUILDING_ROTATE",
		1036: "MSG_BUILDING_UPGRADE_CANCEL",
	}
	BuildingMessageID_value = map[string]int32{
		"BUILDING_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_BUILDING_CREATE":             1025,
		"MSG_BUILDING_UPGRADE":            1026,
		"MSG_BUILDING_DESTROY":            1027,
		"MSG_BUILDING_INFO":               1028,
		"MSG_BUILDING_PRODUCE":            1029,
		"MSG_BUILDING_COLLECT":            1030,
		"MSG_BUILDING_REPAIR":             1031,
		"MSG_BUILDING_STATUS":             1032,
		"MSG_BUILDING_SYNC":               1033,
		"MSG_BUILDING_MOVE":               1034,
		"MSG_BUILDING_ROTATE":             1035,
		"MSG_BUILDING_UPGRADE_CANCEL":     1036,
	}
)

func (x BuildingMessageID) Enum() *BuildingMessageID {
	p := new(BuildingMessageID)
	*p = x
	return p
}

func (x BuildingMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildingMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[4].Descriptor()
}

func (BuildingMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[4]
}

func (x BuildingMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildingMessageID.Descriptor instead.
func (BuildingMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{4}
}

// 消息号枚举 - 社交相关消息 (0x0500 - 0x05FF)
type SocialMessageID int32

const (
	SocialMessageID_SOCIAL_MESSAGE_ID_UNSPECIFIED SocialMessageID = 0
	SocialMessageID_MSG_CHAT_MESSAGE              SocialMessageID = 1281 // 聊天消息
	SocialMessageID_MSG_FRIEND_REQUEST            SocialMessageID = 1282 // 好友请求
	SocialMessageID_MSG_FRIEND_ACCEPT             SocialMessageID = 1283 // 接受好友
	SocialMessageID_MSG_FRIEND_REJECT             SocialMessageID = 1284 // 拒绝好友
	SocialMessageID_MSG_FRIEND_REMOVE             SocialMessageID = 1285 // 删除好友
	SocialMessageID_MSG_FRIEND_LIST               SocialMessageID = 1286 // 好友列表
	SocialMessageID_MSG_GUILD_CREATE              SocialMessageID = 1287 // 创建公会
	SocialMessageID_MSG_GUILD_JOIN                SocialMessageID = 1288 // 加入公会
	SocialMessageID_MSG_GUILD_LEAVE               SocialMessageID = 1289 // 离开公会
	SocialMessageID_MSG_GUILD_INFO                SocialMessageID = 1290 // 公会信息
	SocialMessageID_MSG_TEAM_CREATE               SocialMessageID = 1291 // 创建队伍
	SocialMessageID_MSG_TEAM_JOIN                 SocialMessageID = 1292 // 加入队伍
	SocialMessageID_MSG_TEAM_LEAVE                SocialMessageID = 1293 // 离开队伍
	SocialMessageID_MSG_TEAM_INFO                 SocialMessageID = 1294 // 队伍信息
	SocialMessageID_MSG_MAIL_SEND                 SocialMessageID = 1295 // 发送邮件
	SocialMessageID_MSG_MAIL_RECEIVE              SocialMessageID = 1296 // 接收邮件
	SocialMessageID_MSG_MAIL_DELETE               SocialMessageID = 1297 // 删除邮件
	SocialMessageID_MSG_MAIL_READ                 SocialMessageID = 1298 // 阅读邮件
)

// Enum value maps for SocialMessageID.
var (
	SocialMessageID_name = map[int32]string{
		0:    "SOCIAL_MESSAGE_ID_UNSPECIFIED",
		1281: "MSG_CHAT_MESSAGE",
		1282: "MSG_FRIEND_REQUEST",
		1283: "MSG_FRIEND_ACCEPT",
		1284: "MSG_FRIEND_REJECT",
		1285: "MSG_FRIEND_REMOVE",
		1286: "MSG_FRIEND_LIST",
		1287: "MSG_GUILD_CREATE",
		1288: "MSG_GUILD_JOIN",
		1289: "MSG_GUILD_LEAVE",
		1290: "MSG_GUILD_INFO",
		1291: "MSG_TEAM_CREATE",
		1292: "MSG_TEAM_JOIN",
		1293: "MSG_TEAM_LEAVE",
		1294: "MSG_TEAM_INFO",
		1295: "MSG_MAIL_SEND",
		1296: "MSG_MAIL_RECEIVE",
		1297: "MSG_MAIL_DELETE",
		1298: "MSG_MAIL_READ",
	}
	SocialMessageID_value = map[string]int32{
		"SOCIAL_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_CHAT_MESSAGE":              1281,
		"MSG_FRIEND_REQUEST":            1282,
		"MSG_FRIEND_ACCEPT":             1283,
		"MSG_FRIEND_REJECT":             1284,
		"MSG_FRIEND_REMOVE":             1285,
		"MSG_FRIEND_LIST":               1286,
		"MSG_GUILD_CREATE":              1287,
		"MSG_GUILD_JOIN":                1288,
		"MSG_GUILD_LEAVE":               1289,
		"MSG_GUILD_INFO":                1290,
		"MSG_TEAM_CREATE":               1291,
		"MSG_TEAM_JOIN":                 1292,
		"MSG_TEAM_LEAVE":                1293,
		"MSG_TEAM_INFO":                 1294,
		"MSG_MAIL_SEND":                 1295,
		"MSG_MAIL_RECEIVE":              1296,
		"MSG_MAIL_DELETE":               1297,
		"MSG_MAIL_READ":                 1298,
	}
)

func (x SocialMessageID) Enum() *SocialMessageID {
	p := new(SocialMessageID)
	*p = x
	return p
}

func (x SocialMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SocialMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[5].Descriptor()
}

func (SocialMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[5]
}

func (x SocialMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SocialMessageID.Descriptor instead.
func (SocialMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{5}
}

// 消息号枚举 - 物品相关消息 (0x0600 - 0x06FF)
type ItemMessageID int32

const (
	ItemMessageID_ITEM_MESSAGE_ID_UNSPECIFIED ItemMessageID = 0
	ItemMessageID_MSG_ITEM_USE                ItemMessageID = 1537 // 使用物品
	ItemMessageID_MSG_ITEM_EQUIP              ItemMessageID = 1538 // 装备物品
	ItemMessageID_MSG_ITEM_UNEQUIP            ItemMessageID = 1539 // 卸下装备
	ItemMessageID_MSG_ITEM_DROP               ItemMessageID = 1540 // 丢弃物品
	ItemMessageID_MSG_ITEM_PICKUP             ItemMessageID = 1541 // 拾取物品
	ItemMessageID_MSG_ITEM_TRADE              ItemMessageID = 1542 // 交易物品
	ItemMessageID_MSG_INVENTORY_INFO          ItemMessageID = 1543 // 背包信息
	ItemMessageID_MSG_ITEM_INFO               ItemMessageID = 1544 // 物品信息
	ItemMessageID_MSG_ITEM_CRAFT              ItemMessageID = 1545 // 制作物品
	ItemMessageID_MSG_ITEM_ENHANCE            ItemMessageID = 1546 // 强化物品
	ItemMessageID_MSG_ITEM_DISASSEMBLE        ItemMessageID = 1547 // 分解物品
	ItemMessageID_MSG_ITEM_SELL               ItemMessageID = 1548 // 出售物品
	ItemMessageID_MSG_ITEM_BUY                ItemMessageID = 1549 // 购买物品
	ItemMessageID_MSG_ITEM_STACK              ItemMessageID = 1550 // 物品堆叠
	ItemMessageID_MSG_ITEM_SPLIT              ItemMessageID = 1551 // 物品拆分
)

// Enum value maps for ItemMessageID.
var (
	ItemMessageID_name = map[int32]string{
		0:    "ITEM_MESSAGE_ID_UNSPECIFIED",
		1537: "MSG_ITEM_USE",
		1538: "MSG_ITEM_EQUIP",
		1539: "MSG_ITEM_UNEQUIP",
		1540: "MSG_ITEM_DROP",
		1541: "MSG_ITEM_PICKUP",
		1542: "MSG_ITEM_TRADE",
		1543: "MSG_INVENTORY_INFO",
		1544: "MSG_ITEM_INFO",
		1545: "MSG_ITEM_CRAFT",
		1546: "MSG_ITEM_ENHANCE",
		1547: "MSG_ITEM_DISASSEMBLE",
		1548: "MSG_ITEM_SELL",
		1549: "MSG_ITEM_BUY",
		1550: "MSG_ITEM_STACK",
		1551: "MSG_ITEM_SPLIT",
	}
	ItemMessageID_value = map[string]int32{
		"ITEM_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_ITEM_USE":                1537,
		"MSG_ITEM_EQUIP":              1538,
		"MSG_ITEM_UNEQUIP":            1539,
		"MSG_ITEM_DROP":               1540,
		"MSG_ITEM_PICKUP":             1541,
		"MSG_ITEM_TRADE":              1542,
		"MSG_INVENTORY_INFO":          1543,
		"MSG_ITEM_INFO":               1544,
		"MSG_ITEM_CRAFT":              1545,
		"MSG_ITEM_ENHANCE":            1546,
		"MSG_ITEM_DISASSEMBLE":        1547,
		"MSG_ITEM_SELL":               1548,
		"MSG_ITEM_BUY":                1549,
		"MSG_ITEM_STACK":              1550,
		"MSG_ITEM_SPLIT":              1551,
	}
)

func (x ItemMessageID) Enum() *ItemMessageID {
	p := new(ItemMessageID)
	*p = x
	return p
}

func (x ItemMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[6].Descriptor()
}

func (ItemMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[6]
}

func (x ItemMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemMessageID.Descriptor instead.
func (ItemMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{6}
}

// 消息号枚举 - 任务相关消息 (0x0700 - 0x07FF)
type QuestMessageID int32

const (
	QuestMessageID_QUEST_MESSAGE_ID_UNSPECIFIED QuestMessageID = 0
	QuestMessageID_MSG_QUEST_ACCEPT             QuestMessageID = 1793 // 接受任务
	QuestMessageID_MSG_QUEST_COMPLETE           QuestMessageID = 1794 // 完成任务
	QuestMessageID_MSG_QUEST_CANCEL             QuestMessageID = 1795 // 取消任务
	QuestMessageID_MSG_QUEST_PROGRESS           QuestMessageID = 1796 // 任务进度
	QuestMessageID_MSG_QUEST_LIST               QuestMessageID = 1797 // 任务列表
	QuestMessageID_MSG_QUEST_INFO               QuestMessageID = 1798 // 任务信息
	QuestMessageID_MSG_QUEST_REWARD             QuestMessageID = 1799 // 任务奖励
	QuestMessageID_MSG_QUEST_UPDATE             QuestMessageID = 1800 // 任务更新
	QuestMessageID_MSG_QUEST_ABANDON            QuestMessageID = 1801 // 放弃任务
	QuestMessageID_MSG_QUEST_SHARE              QuestMessageID = 1802 // 分享任务
	QuestMessageID_MSG_QUEST_TRACK              QuestMessageID = 1803 // 追踪任务
	QuestMessageID_MSG_QUEST_UNTrack            QuestMessageID = 1804 // 取消追踪
)

// Enum value maps for QuestMessageID.
var (
	QuestMessageID_name = map[int32]string{
		0:    "QUEST_MESSAGE_ID_UNSPECIFIED",
		1793: "MSG_QUEST_ACCEPT",
		1794: "MSG_QUEST_COMPLETE",
		1795: "MSG_QUEST_CANCEL",
		1796: "MSG_QUEST_PROGRESS",
		1797: "MSG_QUEST_LIST",
		1798: "MSG_QUEST_INFO",
		1799: "MSG_QUEST_REWARD",
		1800: "MSG_QUEST_UPDATE",
		1801: "MSG_QUEST_ABANDON",
		1802: "MSG_QUEST_SHARE",
		1803: "MSG_QUEST_TRACK",
		1804: "MSG_QUEST_UNTrack",
	}
	QuestMessageID_value = map[string]int32{
		"QUEST_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_QUEST_ACCEPT":             1793,
		"MSG_QUEST_COMPLETE":           1794,
		"MSG_QUEST_CANCEL":             1795,
		"MSG_QUEST_PROGRESS":           1796,
		"MSG_QUEST_LIST":               1797,
		"MSG_QUEST_INFO":               1798,
		"MSG_QUEST_REWARD":             1799,
		"MSG_QUEST_UPDATE":             1800,
		"MSG_QUEST_ABANDON":            1801,
		"MSG_QUEST_SHARE":              1802,
		"MSG_QUEST_TRACK":              1803,
		"MSG_QUEST_UNTrack":            1804,
	}
)

func (x QuestMessageID) Enum() *QuestMessageID {
	p := new(QuestMessageID)
	*p = x
	return p
}

func (x QuestMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[7].Descriptor()
}

func (QuestMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[7]
}

func (x QuestMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestMessageID.Descriptor instead.
func (QuestMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{7}
}

// 消息号枚举 - 查询相关消息 (0x0800 - 0x08FF)
type QueryMessageID int32

const (
	QueryMessageID_QUERY_MESSAGE_ID_UNSPECIFIED QueryMessageID = 0
	QueryMessageID_MSG_GET_PLAYER_INFO          QueryMessageID = 2049 // 获取玩家信息
	QueryMessageID_MSG_GET_ONLINE_PLAYERS       QueryMessageID = 2050 // 获取在线玩家
	QueryMessageID_MSG_GET_BATTLE_INFO          QueryMessageID = 2051 // 获取战斗信息
	QueryMessageID_MSG_GET_RANKING_LIST         QueryMessageID = 2052 // 获取排行榜
	QueryMessageID_MSG_GET_SERVER_INFO          QueryMessageID = 2053 // 获取服务器信息
	QueryMessageID_MSG_GET_PET_INFO             QueryMessageID = 2054 // 获取宠物信息
	QueryMessageID_MSG_GET_BUILDING_INFO        QueryMessageID = 2055 // 获取建筑信息
	QueryMessageID_MSG_GET_ITEM_INFO            QueryMessageID = 2056 // 获取物品信息
	QueryMessageID_MSG_GET_QUEST_INFO           QueryMessageID = 2057 // 获取任务信息
	QueryMessageID_MSG_GET_GUILD_INFO           QueryMessageID = 2058 // 获取公会信息
	QueryMessageID_MSG_GET_TEAM_INFO            QueryMessageID = 2059 // 获取队伍信息
	QueryMessageID_MSG_GET_FRIEND_INFO          QueryMessageID = 2060 // 获取好友信息
	QueryMessageID_MSG_GET_MAIL_INFO            QueryMessageID = 2061 // 获取邮件信息
	QueryMessageID_MSG_GET_STATS                QueryMessageID = 2062 // 获取统计信息
)

// Enum value maps for QueryMessageID.
var (
	QueryMessageID_name = map[int32]string{
		0:    "QUERY_MESSAGE_ID_UNSPECIFIED",
		2049: "MSG_GET_PLAYER_INFO",
		2050: "MSG_GET_ONLINE_PLAYERS",
		2051: "MSG_GET_BATTLE_INFO",
		2052: "MSG_GET_RANKING_LIST",
		2053: "MSG_GET_SERVER_INFO",
		2054: "MSG_GET_PET_INFO",
		2055: "MSG_GET_BUILDING_INFO",
		2056: "MSG_GET_ITEM_INFO",
		2057: "MSG_GET_QUEST_INFO",
		2058: "MSG_GET_GUILD_INFO",
		2059: "MSG_GET_TEAM_INFO",
		2060: "MSG_GET_FRIEND_INFO",
		2061: "MSG_GET_MAIL_INFO",
		2062: "MSG_GET_STATS",
	}
	QueryMessageID_value = map[string]int32{
		"QUERY_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_GET_PLAYER_INFO":          2049,
		"MSG_GET_ONLINE_PLAYERS":       2050,
		"MSG_GET_BATTLE_INFO":          2051,
		"MSG_GET_RANKING_LIST":         2052,
		"MSG_GET_SERVER_INFO":          2053,
		"MSG_GET_PET_INFO":             2054,
		"MSG_GET_BUILDING_INFO":        2055,
		"MSG_GET_ITEM_INFO":            2056,
		"MSG_GET_QUEST_INFO":           2057,
		"MSG_GET_GUILD_INFO":           2058,
		"MSG_GET_TEAM_INFO":            2059,
		"MSG_GET_FRIEND_INFO":          2060,
		"MSG_GET_MAIL_INFO":            2061,
		"MSG_GET_STATS":                2062,
	}
)

func (x QueryMessageID) Enum() *QueryMessageID {
	p := new(QueryMessageID)
	*p = x
	return p
}

func (x QueryMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[8].Descriptor()
}

func (QueryMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[8]
}

func (x QueryMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryMessageID.Descriptor instead.
func (QueryMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{8}
}

// 消息号枚举 - 系统管理消息 (0x0900 - 0x09FF)
type AdminMessageID int32

const (
	AdminMessageID_ADMIN_MESSAGE_ID_UNSPECIFIED AdminMessageID = 0
	AdminMessageID_MSG_ADMIN_BAN_PLAYER         AdminMessageID = 2305 // 封禁玩家
	AdminMessageID_MSG_ADMIN_UNBAN_PLAYER       AdminMessageID = 2306 // 解封玩家
	AdminMessageID_MSG_ADMIN_KICK_PLAYER        AdminMessageID = 2307 // 踢出玩家
	AdminMessageID_MSG_ADMIN_MUTE_PLAYER        AdminMessageID = 2308 // 禁言玩家
	AdminMessageID_MSG_ADMIN_UNMUTE_PLAYER      AdminMessageID = 2309 // 取消禁言
	AdminMessageID_MSG_ADMIN_GIVE_ITEM          AdminMessageID = 2310 // 给予物品
	AdminMessageID_MSG_ADMIN_TAKE_ITEM          AdminMessageID = 2311 // 收回物品
	AdminMessageID_MSG_ADMIN_SET_LEVEL          AdminMessageID = 2312 // 设置等级
	AdminMessageID_MSG_ADMIN_SET_EXP            AdminMessageID = 2313 // 设置经验
	AdminMessageID_MSG_ADMIN_SET_GOLD           AdminMessageID = 2314 // 设置金币
	AdminMessageID_MSG_ADMIN_TELEPORT           AdminMessageID = 2315 // 传送玩家
	AdminMessageID_MSG_ADMIN_ANNOUNCE           AdminMessageID = 2316 // 公告
	AdminMessageID_MSG_ADMIN_RELOAD_CONFIG      AdminMessageID = 2317 // 重载配置
	AdminMessageID_MSG_ADMIN_SHUTDOWN           AdminMessageID = 2318 // 关闭服务器
	AdminMessageID_MSG_ADMIN_RESTART            AdminMessageID = 2319 // 重启服务器
)

// Enum value maps for AdminMessageID.
var (
	AdminMessageID_name = map[int32]string{
		0:    "ADMIN_MESSAGE_ID_UNSPECIFIED",
		2305: "MSG_ADMIN_BAN_PLAYER",
		2306: "MSG_ADMIN_UNBAN_PLAYER",
		2307: "MSG_ADMIN_KICK_PLAYER",
		2308: "MSG_ADMIN_MUTE_PLAYER",
		2309: "MSG_ADMIN_UNMUTE_PLAYER",
		2310: "MSG_ADMIN_GIVE_ITEM",
		2311: "MSG_ADMIN_TAKE_ITEM",
		2312: "MSG_ADMIN_SET_LEVEL",
		2313: "MSG_ADMIN_SET_EXP",
		2314: "MSG_ADMIN_SET_GOLD",
		2315: "MSG_ADMIN_TELEPORT",
		2316: "MSG_ADMIN_ANNOUNCE",
		2317: "MSG_ADMIN_RELOAD_CONFIG",
		2318: "MSG_ADMIN_SHUTDOWN",
		2319: "MSG_ADMIN_RESTART",
	}
	AdminMessageID_value = map[string]int32{
		"ADMIN_MESSAGE_ID_UNSPECIFIED": 0,
		"MSG_ADMIN_BAN_PLAYER":         2305,
		"MSG_ADMIN_UNBAN_PLAYER":       2306,
		"MSG_ADMIN_KICK_PLAYER":        2307,
		"MSG_ADMIN_MUTE_PLAYER":        2308,
		"MSG_ADMIN_UNMUTE_PLAYER":      2309,
		"MSG_ADMIN_GIVE_ITEM":          2310,
		"MSG_ADMIN_TAKE_ITEM":          2311,
		"MSG_ADMIN_SET_LEVEL":          2312,
		"MSG_ADMIN_SET_EXP":            2313,
		"MSG_ADMIN_SET_GOLD":           2314,
		"MSG_ADMIN_TELEPORT":           2315,
		"MSG_ADMIN_ANNOUNCE":           2316,
		"MSG_ADMIN_RELOAD_CONFIG":      2317,
		"MSG_ADMIN_SHUTDOWN":           2318,
		"MSG_ADMIN_RESTART":            2319,
	}
)

func (x AdminMessageID) Enum() *AdminMessageID {
	p := new(AdminMessageID)
	*p = x
	return p
}

func (x AdminMessageID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminMessageID) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[9].Descriptor()
}

func (AdminMessageID) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[9]
}

func (x AdminMessageID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminMessageID.Descriptor instead.
func (AdminMessageID) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{9}
}

// 消息标志位枚举
type MessageFlag int32

const (
	MessageFlag_MESSAGE_FLAG_UNSPECIFIED MessageFlag = 0
	MessageFlag_MESSAGE_FLAG_REQUEST     MessageFlag = 1   // 请求消息
	MessageFlag_MESSAGE_FLAG_RESPONSE    MessageFlag = 2   // 响应消息
	MessageFlag_MESSAGE_FLAG_ERROR       MessageFlag = 4   // 错误消息
	MessageFlag_MESSAGE_FLAG_ASYNC       MessageFlag = 8   // 异步消息
	MessageFlag_MESSAGE_FLAG_BROADCAST   MessageFlag = 16  // 广播消息
	MessageFlag_MESSAGE_FLAG_ENCRYPTED   MessageFlag = 32  // 加密消息
	MessageFlag_MESSAGE_FLAG_COMPRESSED  MessageFlag = 64  // 压缩消息
	MessageFlag_MESSAGE_FLAG_PRIORITY    MessageFlag = 128 // 高优先级消息
	MessageFlag_MESSAGE_FLAG_RELIABLE    MessageFlag = 256 // 可靠消息
	MessageFlag_MESSAGE_FLAG_ORDERED     MessageFlag = 512 // 有序消息
)

// Enum value maps for MessageFlag.
var (
	MessageFlag_name = map[int32]string{
		0:   "MESSAGE_FLAG_UNSPECIFIED",
		1:   "MESSAGE_FLAG_REQUEST",
		2:   "MESSAGE_FLAG_RESPONSE",
		4:   "MESSAGE_FLAG_ERROR",
		8:   "MESSAGE_FLAG_ASYNC",
		16:  "MESSAGE_FLAG_BROADCAST",
		32:  "MESSAGE_FLAG_ENCRYPTED",
		64:  "MESSAGE_FLAG_COMPRESSED",
		128: "MESSAGE_FLAG_PRIORITY",
		256: "MESSAGE_FLAG_RELIABLE",
		512: "MESSAGE_FLAG_ORDERED",
	}
	MessageFlag_value = map[string]int32{
		"MESSAGE_FLAG_UNSPECIFIED": 0,
		"MESSAGE_FLAG_REQUEST":     1,
		"MESSAGE_FLAG_RESPONSE":    2,
		"MESSAGE_FLAG_ERROR":       4,
		"MESSAGE_FLAG_ASYNC":       8,
		"MESSAGE_FLAG_BROADCAST":   16,
		"MESSAGE_FLAG_ENCRYPTED":   32,
		"MESSAGE_FLAG_COMPRESSED":  64,
		"MESSAGE_FLAG_PRIORITY":    128,
		"MESSAGE_FLAG_RELIABLE":    256,
		"MESSAGE_FLAG_ORDERED":     512,
	}
)

func (x MessageFlag) Enum() *MessageFlag {
	p := new(MessageFlag)
	*p = x
	return p
}

func (x MessageFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[10].Descriptor()
}

func (MessageFlag) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[10]
}

func (x MessageFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageFlag.Descriptor instead.
func (MessageFlag) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{10}
}

// 消息优先级枚举
type MessagePriority int32

const (
	MessagePriority_MESSAGE_PRIORITY_UNSPECIFIED MessagePriority = 0
	MessagePriority_MESSAGE_PRIORITY_LOW         MessagePriority = 1 // 低优先级
	MessagePriority_MESSAGE_PRIORITY_NORMAL      MessagePriority = 2 // 普通优先级
	MessagePriority_MESSAGE_PRIORITY_HIGH        MessagePriority = 3 // 高优先级
	MessagePriority_MESSAGE_PRIORITY_URGENT      MessagePriority = 4 // 紧急优先级
	MessagePriority_MESSAGE_PRIORITY_CRITICAL    MessagePriority = 5 // 关键优先级
)

// Enum value maps for MessagePriority.
var (
	MessagePriority_name = map[int32]string{
		0: "MESSAGE_PRIORITY_UNSPECIFIED",
		1: "MESSAGE_PRIORITY_LOW",
		2: "MESSAGE_PRIORITY_NORMAL",
		3: "MESSAGE_PRIORITY_HIGH",
		4: "MESSAGE_PRIORITY_URGENT",
		5: "MESSAGE_PRIORITY_CRITICAL",
	}
	MessagePriority_value = map[string]int32{
		"MESSAGE_PRIORITY_UNSPECIFIED": 0,
		"MESSAGE_PRIORITY_LOW":         1,
		"MESSAGE_PRIORITY_NORMAL":      2,
		"MESSAGE_PRIORITY_HIGH":        3,
		"MESSAGE_PRIORITY_URGENT":      4,
		"MESSAGE_PRIORITY_CRITICAL":    5,
	}
)

func (x MessagePriority) Enum() *MessagePriority {
	p := new(MessagePriority)
	*p = x
	return p
}

func (x MessagePriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessagePriority) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_messages_proto_enumTypes[11].Descriptor()
}

func (MessagePriority) Type() protoreflect.EnumType {
	return &file_proto_messages_proto_enumTypes[11]
}

func (x MessagePriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessagePriority.Descriptor instead.
func (MessagePriority) EnumDescriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{11}
}

// 消息头结构
type MessageHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Magic         uint32                 `protobuf:"varint,1,opt,name=magic,proto3" json:"magic,omitempty"`                                // 魔数标识 (0x47574B53 "GWKS")
	MessageId     uint32                 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`       // 消息ID
	MessageType   uint32                 `protobuf:"varint,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // 消息类型
	Flags         uint32                 `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`                                // 标志位
	PlayerId      uint64                 `protobuf:"varint,5,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`          // 玩家ID
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                        // 时间戳
	Sequence      uint32                 `protobuf:"varint,7,opt,name=sequence,proto3" json:"sequence,omitempty"`                          // 序列号
	Length        uint32                 `protobuf:"varint,8,opt,name=length,proto3" json:"length,omitempty"`                              // 消息体长度
	RequestId     string                 `protobuf:"bytes,9,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`        // 请求ID
	SessionId     string                 `protobuf:"bytes,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`       // 会话ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageHeader) Reset() {
	*x = MessageHeader{}
	mi := &file_proto_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageHeader) ProtoMessage() {}

func (x *MessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageHeader.ProtoReflect.Descriptor instead.
func (*MessageHeader) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{0}
}

func (x *MessageHeader) GetMagic() uint32 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *MessageHeader) GetMessageId() uint32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MessageHeader) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *MessageHeader) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *MessageHeader) GetPlayerId() uint64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *MessageHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MessageHeader) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *MessageHeader) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *MessageHeader) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *MessageHeader) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

var File_proto_messages_proto protoreflect.FileDescriptor

const file_proto_messages_proto_rawDesc = "" +
	"\n" +
	"\x14proto/messages.proto\x12\x16greatestworks.messages\"\xaa\x02\n" +
	"\rMessageHeader\x12\x14\n" +
	"\x05magic\x18\x01 \x01(\rR\x05magic\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\rR\tmessageId\x12!\n" +
	"\fmessage_type\x18\x03 \x01(\rR\vmessageType\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\rR\x05flags\x12\x1b\n" +
	"\tplayer_id\x18\x05 \x01(\x04R\bplayerId\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12\x1a\n" +
	"\bsequence\x18\a \x01(\rR\bsequence\x12\x16\n" +
	"\x06length\x18\b \x01(\rR\x06length\x12\x1d\n" +
	"\n" +
	"request_id\x18\t \x01(\tR\trequestId\x12\x1d\n" +
	"\n" +
	"session_id\x18\n" +
	" \x01(\tR\tsessionId*\xe8\x01\n" +
	"\x0fSystemMessageID\x12!\n" +
	"\x1dSYSTEM_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rMSG_HEARTBEAT\x10\x01\x12\x11\n" +
	"\rMSG_HANDSHAKE\x10\x02\x12\f\n" +
	"\bMSG_AUTH\x10\x03\x12\x12\n" +
	"\x0eMSG_DISCONNECT\x10\x04\x12\r\n" +
	"\tMSG_ERROR\x10\x05\x12\f\n" +
	"\bMSG_PING\x10\x06\x12\f\n" +
	"\bMSG_PONG\x10\a\x12\x13\n" +
	"\x0fMSG_SYSTEM_INFO\x10\b\x12\x15\n" +
	"\x11MSG_SERVER_STATUS\x10\t\x12\x13\n" +
	"\x0fMSG_MAINTENANCE\x10\n" +
	"*\x94\x03\n" +
	"\x0fPlayerMessageID\x12!\n" +
	"\x1dPLAYER_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x10MSG_PLAYER_LOGIN\x10\x81\x02\x12\x16\n" +
	"\x11MSG_PLAYER_LOGOUT\x10\x82\x02\x12\x14\n" +
	"\x0fMSG_PLAYER_INFO\x10\x83\x02\x12\x14\n" +
	"\x0fMSG_PLAYER_MOVE\x10\x84\x02\x12\x16\n" +
	"\x11MSG_PLAYER_CREATE\x10\x85\x02\x12\x16\n" +
	"\x11MSG_PLAYER_UPDATE\x10\x86\x02\x12\x16\n" +
	"\x11MSG_PLAYER_DELETE\x10\x87\x02\x12\x16\n" +
	"\x11MSG_PLAYER_STATUS\x10\x88\x02\x12\x15\n" +
	"\x10MSG_PLAYER_STATS\x10\x89\x02\x12\x15\n" +
	"\x10MSG_PLAYER_LEVEL\x10\x8a\x02\x12\x18\n" +
	"\x13MSG_PLAYER_EXP_GAIN\x10\x8b\x02\x12\x14\n" +
	"\x0fMSG_PLAYER_SYNC\x10\x8c\x02\x12\x13\n" +
	"\x0eMSG_PLAYER_BAN\x10\x8d\x02\x12\x15\n" +
	"\x10MSG_PLAYER_UNBAN\x10\x8e\x02\x12\x19\n" +
	"\x14MSG_PLAYER_GM_UPDATE\x10\x8f\x02*\xf8\x02\n" +
	"\x0fBattleMessageID\x12!\n" +
	"\x1dBATTLE_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x11MSG_CREATE_BATTLE\x10\x81\x04\x12\x14\n" +
	"\x0fMSG_JOIN_BATTLE\x10\x82\x04\x12\x15\n" +
	"\x10MSG_LEAVE_BATTLE\x10\x83\x04\x12\x15\n" +
	"\x10MSG_START_BATTLE\x10\x84\x04\x12\x13\n" +
	"\x0eMSG_END_BATTLE\x10\x85\x04\x12\x16\n" +
	"\x11MSG_BATTLE_ACTION\x10\x86\x04\x12\x16\n" +
	"\x11MSG_BATTLE_RESULT\x10\x87\x04\x12\x16\n" +
	"\x11MSG_BATTLE_STATUS\x10\x88\x04\x12\x13\n" +
	"\x0eMSG_SKILL_CAST\x10\x89\x04\x12\x15\n" +
	"\x10MSG_DAMAGE_DEALT\x10\x8a\x04\x12\x15\n" +
	"\x10MSG_BATTLE_ROUND\x10\x8b\x04\x12\x14\n" +
	"\x0fMSG_BATTLE_SYNC\x10\x8c\x04\x12\x18\n" +
	"\x13MSG_BATTLE_SPECTATE\x10\x8d\x04\x12\x16\n" +
	"\x11MSG_BATTLE_REPLAY\x10\x8e\x04*\xf8\x02\n" +
	"\fPetMessageID\x12\x1e\n" +
	"\x1aPET_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0eMSG_PET_SUMMON\x10\x81\x06\x12\x14\n" +
	"\x0fMSG_PET_DISMISS\x10\x82\x06\x12\x11\n" +
	"\fMSG_PET_INFO\x10\x83\x06\x12\x11\n" +
	"\fMSG_PET_MOVE\x10\x84\x06\x12\x13\n" +
	"\x0eMSG_PET_ACTION\x10\x85\x06\x12\x15\n" +
	"\x10MSG_PET_LEVEL_UP\x10\x86\x06\x12\x16\n" +
	"\x11MSG_PET_EVOLUTION\x10\x87\x06\x12\x12\n" +
	"\rMSG_PET_TRAIN\x10\x88\x06\x12\x11\n" +
	"\fMSG_PET_FEED\x10\x89\x06\x12\x13\n" +
	"\x0eMSG_PET_STATUS\x10\x8a\x06\x12\x18\n" +
	"\x13MSG_PET_SKILL_LEARN\x10\x8b\x06\x12\x19\n" +
	"\x14MSG_PET_SKILL_FORGET\x10\x8c\x06\x12\x11\n" +
	"\fMSG_PET_BOND\x10\x8d\x06\x12\x16\n" +
	"\x11MSG_PET_SYNTHESIS\x10\x8e\x06\x12\x17\n" +
	"\x12MSG_PET_SKIN_EQUIP\x10\x8f\x06*\xf6\x02\n" +
	"\x11BuildingMessageID\x12#\n" +
	"\x1fBUILDING_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x13MSG_BUILDING_CREATE\x10\x81\b\x12\x19\n" +
	"\x14MSG_BUILDING_UPGRADE\x10\x82\b\x12\x19\n" +
	"\x14MSG_BUILDING_DESTROY\x10\x83\b\x12\x16\n" +
	"\x11MSG_BUILDING_INFO\x10\x84\b\x12\x19\n" +
	"\x14MSG_BUILDING_PRODUCE\x10\x85\b\x12\x19\n" +
	"\x14MSG_BUILDING_COLLECT\x10\x86\b\x12\x18\n" +
	"\x13MSG_BUILDING_REPAIR\x10\x87\b\x12\x18\n" +
	"\x13MSG_BUILDING_STATUS\x10\x88\b\x12\x16\n" +
	"\x11MSG_BUILDING_SYNC\x10\x89\b\x12\x16\n" +
	"\x11MSG_BUILDING_MOVE\x10\x8a\b\x12\x18\n" +
	"\x13MSG_BUILDING_ROTATE\x10\x8b\b\x12 \n" +
	"\x1bMSG_BUILDING_UPGRADE_CANCEL\x10\x8c\b*\xc1\x03\n" +
	"\x0fSocialMessageID\x12!\n" +
	"\x1dSOCIAL_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x10MSG_CHAT_MESSAGE\x10\x81\n" +
	"\x12\x17\n" +
	"\x12MSG_FRIEND_REQUEST\x10\x82\n" +
	"\x12\x16\n" +
	"\x11MSG_FRIEND_ACCEPT\x10\x83\n" +
	"\x12\x16\n" +
	"\x11MSG_FRIEND_REJECT\x10\x84\n" +
	"\x12\x16\n" +
	"\x11MSG_FRIEND_REMOVE\x10\x85\n" +
	"\x12\x14\n" +
	"\x0fMSG_FRIEND_LIST\x10\x86\n" +
	"\x12\x15\n" +
	"\x10MSG_GUILD_CREATE\x10\x87\n" +
	"\x12\x13\n" +
	"\x0eMSG_GUILD_JOIN\x10\x88\n" +
	"\x12\x14\n" +
	"\x0fMSG_GUILD_LEAVE\x10\x89\n" +
	"\x12\x13\n" +
	"\x0eMSG_GUILD_INFO\x10\x8a\n" +
	"\x12\x14\n" +
	"\x0fMSG_TEAM_CREATE\x10\x8b\n" +
	"\x12\x12\n" +
	"\rMSG_TEAM_JOIN\x10\x8c\n" +
	"\x12\x13\n" +
	"\x0eMSG_TEAM_LEAVE\x10\x8d\n" +
	"\x12\x12\n" +
	"\rMSG_TEAM_INFO\x10\x8e\n" +
	"\x12\x12\n" +
	"\rMSG_MAIL_SEND\x10\x8f\n" +
	"\x12\x15\n" +
	"\x10MSG_MAIL_RECEIVE\x10\x90\n" +
	"\x12\x14\n" +
	"\x0fMSG_MAIL_DELETE\x10\x91\n" +
	"\x12\x12\n" +
	"\rMSG_MAIL_READ\x10\x92\n" +
	"*\xf3\x02\n" +
	"\rItemMessageID\x12\x1f\n" +
	"\x1bITEM_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\fMSG_ITEM_USE\x10\x81\f\x12\x13\n" +
	"\x0eMSG_ITEM_EQUIP\x10\x82\f\x12\x15\n" +
	"\x10MSG_ITEM_UNEQUIP\x10\x83\f\x12\x12\n" +
	"\rMSG_ITEM_DROP\x10\x84\f\x12\x14\n" +
	"\x0fMSG_ITEM_PICKUP\x10\x85\f\x12\x13\n" +
	"\x0eMSG_ITEM_TRADE\x10\x86\f\x12\x17\n" +
	"\x12MSG_INVENTORY_INFO\x10\x87\f\x12\x12\n" +
	"\rMSG_ITEM_INFO\x10\x88\f\x12\x13\n" +
	"\x0eMSG_ITEM_CRAFT\x10\x89\f\x12\x15\n" +
	"\x10MSG_ITEM_ENHANCE\x10\x8a\f\x12\x19\n" +
	"\x14MSG_ITEM_DISASSEMBLE\x10\x8b\f\x12\x12\n" +
	"\rMSG_ITEM_SELL\x10\x8c\f\x12\x11\n" +
	"\fMSG_ITEM_BUY\x10\x8d\f\x12\x13\n" +
	"\x0eMSG_ITEM_STACK\x10\x8e\f\x12\x13\n" +
	"\x0eMSG_ITEM_SPLIT\x10\x8f\f*\xc6\x02\n" +
	"\x0eQuestMessageID\x12 \n" +
	"\x1cQUEST_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x10MSG_QUEST_ACCEPT\x10\x81\x0e\x12\x17\n" +
	"\x12MSG_QUEST_COMPLETE\x10\x82\x0e\x12\x15\n" +
	"\x10MSG_QUEST_CANCEL\x10\x83\x0e\x12\x17\n" +
	"\x12MSG_QUEST_PROGRESS\x10\x84\x0e\x12\x13\n" +
	"\x0eMSG_QUEST_LIST\x10\x85\x0e\x12\x13\n" +
	"\x0eMSG_QUEST_INFO\x10\x86\x0e\x12\x15\n" +
	"\x10MSG_QUEST_REWARD\x10\x87\x0e\x12\x15\n" +
	"\x10MSG_QUEST_UPDATE\x10\x88\x0e\x12\x16\n" +
	"\x11MSG_QUEST_ABANDON\x10\x89\x0e\x12\x14\n" +
	"\x0fMSG_QUEST_SHARE\x10\x8a\x0e\x12\x14\n" +
	"\x0fMSG_QUEST_TRACK\x10\x8b\x0e\x12\x16\n" +
	"\x11MSG_QUEST_UNTrack\x10\x8c\x0e*\x93\x03\n" +
	"\x0eQueryMessageID\x12 \n" +
	"\x1cQUERY_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x13MSG_GET_PLAYER_INFO\x10\x81\x10\x12\x1b\n" +
	"\x16MSG_GET_ONLINE_PLAYERS\x10\x82\x10\x12\x18\n" +
	"\x13MSG_GET_BATTLE_INFO\x10\x83\x10\x12\x19\n" +
	"\x14MSG_GET_RANKING_LIST\x10\x84\x10\x12\x18\n" +
	"\x13MSG_GET_SERVER_INFO\x10\x85\x10\x12\x15\n" +
	"\x10MSG_GET_PET_INFO\x10\x86\x10\x12\x1a\n" +
	"\x15MSG_GET_BUILDING_INFO\x10\x87\x10\x12\x16\n" +
	"\x11MSG_GET_ITEM_INFO\x10\x88\x10\x12\x17\n" +
	"\x12MSG_GET_QUEST_INFO\x10\x89\x10\x12\x17\n" +
	"\x12MSG_GET_GUILD_INFO\x10\x8a\x10\x12\x16\n" +
	"\x11MSG_GET_TEAM_INFO\x10\x8b\x10\x12\x18\n" +
	"\x13MSG_GET_FRIEND_INFO\x10\x8c\x10\x12\x16\n" +
	"\x11MSG_GET_MAIL_INFO\x10\x8d\x10\x12\x12\n" +
	"\rMSG_GET_STATS\x10\x8e\x10*\xc0\x03\n" +
	"\x0eAdminMessageID\x12 \n" +
	"\x1cADMIN_MESSAGE_ID_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x14MSG_ADMIN_BAN_PLAYER\x10\x81\x12\x12\x1b\n" +
	"\x16MSG_ADMIN_UNBAN_PLAYER\x10\x82\x12\x12\x1a\n" +
	"\x15MSG_ADMIN_KICK_PLAYER\x10\x83\x12\x12\x1a\n" +
	"\x15MSG_ADMIN_MUTE_PLAYER\x10\x84\x12\x12\x1c\n" +
	"\x17MSG_ADMIN_UNMUTE_PLAYER\x10\x85\x12\x12\x18\n" +
	"\x13MSG_ADMIN_GIVE_ITEM\x10\x86\x12\x12\x18\n" +
	"\x13MSG_ADMIN_TAKE_ITEM\x10\x87\x12\x12\x18\n" +
	"\x13MSG_ADMIN_SET_LEVEL\x10\x88\x12\x12\x16\n" +
	"\x11MSG_ADMIN_SET_EXP\x10\x89\x12\x12\x17\n" +
	"\x12MSG_ADMIN_SET_GOLD\x10\x8a\x12\x12\x17\n" +
	"\x12MSG_ADMIN_TELEPORT\x10\x8b\x12\x12\x17\n" +
	"\x12MSG_ADMIN_ANNOUNCE\x10\x8c\x12\x12\x1c\n" +
	"\x17MSG_ADMIN_RELOAD_CONFIG\x10\x8d\x12\x12\x17\n" +
	"\x12MSG_ADMIN_SHUTDOWN\x10\x8e\x12\x12\x16\n" +
	"\x11MSG_ADMIN_RESTART\x10\x8f\x12*\xb8\x02\n" +
	"\vMessageFlag\x12\x1c\n" +
	"\x18MESSAGE_FLAG_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14MESSAGE_FLAG_REQUEST\x10\x01\x12\x19\n" +
	"\x15MESSAGE_FLAG_RESPONSE\x10\x02\x12\x16\n" +
	"\x12MESSAGE_FLAG_ERROR\x10\x04\x12\x16\n" +
	"\x12MESSAGE_FLAG_ASYNC\x10\b\x12\x1a\n" +
	"\x16MESSAGE_FLAG_BROADCAST\x10\x10\x12\x1a\n" +
	"\x16MESSAGE_FLAG_ENCRYPTED\x10 \x12\x1b\n" +
	"\x17MESSAGE_FLAG_COMPRESSED\x10@\x12\x1a\n" +
	"\x15MESSAGE_FLAG_PRIORITY\x10\x80\x01\x12\x1a\n" +
	"\x15MESSAGE_FLAG_RELIABLE\x10\x80\x02\x12\x19\n" +
	"\x14MESSAGE_FLAG_ORDERED\x10\x80\x04*\xc1\x01\n" +
	"\x0fMessagePriority\x12 \n" +
	"\x1cMESSAGE_PRIORITY_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14MESSAGE_PRIORITY_LOW\x10\x01\x12\x1b\n" +
	"\x17MESSAGE_PRIORITY_NORMAL\x10\x02\x12\x19\n" +
	"\x15MESSAGE_PRIORITY_HIGH\x10\x03\x12\x1b\n" +
	"\x17MESSAGE_PRIORITY_URGENT\x10\x04\x12\x1d\n" +
	"\x19MESSAGE_PRIORITY_CRITICAL\x10\x05B@Z%greatestworks/internal/proto/messages\xaa\x02\x16GreatestWorks.Messagesb\x06proto3"

var (
	file_proto_messages_proto_rawDescOnce sync.Once
	file_proto_messages_proto_rawDescData []byte
)

func file_proto_messages_proto_rawDescGZIP() []byte {
	file_proto_messages_proto_rawDescOnce.Do(func() {
		file_proto_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_messages_proto_rawDesc), len(file_proto_messages_proto_rawDesc)))
	})
	return file_proto_messages_proto_rawDescData
}

var file_proto_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_proto_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_messages_proto_goTypes = []any{
	(SystemMessageID)(0),   // 0: greatestworks.messages.SystemMessageID
	(PlayerMessageID)(0),   // 1: greatestworks.messages.PlayerMessageID
	(BattleMessageID)(0),   // 2: greatestworks.messages.BattleMessageID
	(PetMessageID)(0),      // 3: greatestworks.messages.PetMessageID
	(BuildingMessageID)(0), // 4: greatestworks.messages.BuildingMessageID
	(SocialMessageID)(0),   // 5: greatestworks.messages.SocialMessageID
	(ItemMessageID)(0),     // 6: greatestworks.messages.ItemMessageID
	(QuestMessageID)(0),    // 7: greatestworks.messages.QuestMessageID
	(QueryMessageID)(0),    // 8: greatestworks.messages.QueryMessageID
	(AdminMessageID)(0),    // 9: greatestworks.messages.AdminMessageID
	(MessageFlag)(0),       // 10: greatestworks.messages.MessageFlag
	(MessagePriority)(0),   // 11: greatestworks.messages.MessagePriority
	(*MessageHeader)(nil),  // 12: greatestworks.messages.MessageHeader
}
var file_proto_messages_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_messages_proto_init() }
func file_proto_messages_proto_init() {
	if File_proto_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_messages_proto_rawDesc), len(file_proto_messages_proto_rawDesc)),
			NumEnums:      12,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_messages_proto_goTypes,
		DependencyIndexes: file_proto_messages_proto_depIdxs,
		EnumInfos:         file_proto_messages_proto_enumTypes,
		MessageInfos:      file_proto_messages_proto_msgTypes,
	}.Build()
	File_proto_messages_proto = out.File
	file_proto_messages_proto_goTypes = nil
	file_proto_messages_proto_depIdxs = nil
}
