syntax = "proto3";

package greatestworks.pet;

import "proto/common.proto";

option go_package = "greatestworks/internal/proto/pet";
option csharp_namespace = "GreatestWorks.Pet";

// 宠物服务定义
service PetService {
  // 创建宠物
  rpc CreatePet(CreatePetRequest) returns (CreatePetResponse);
  
  // 获取宠物信息
  rpc GetPetInfo(GetPetInfoRequest) returns (GetPetInfoResponse);
  
  // 更新宠物信息
  rpc UpdatePet(UpdatePetRequest) returns (UpdatePetResponse);
  
  // 宠物升级
  rpc LevelUpPet(LevelUpPetRequest) returns (LevelUpPetResponse);
  
  // 宠物进化
  rpc EvolvePet(EvolvePetRequest) returns (EvolvePetResponse);
  
  // 获取玩家宠物列表
  rpc GetPlayerPets(GetPlayerPetsRequest) returns (GetPlayerPetsResponse);
}

// 创建宠物请求
message CreatePetRequest {
  string player_id = 1;
  string species_id = 2;
  string name = 3;
  int32 initial_level = 4;
  string rarity = 5;
}

// 创建宠物响应
message CreatePetResponse {
  greatestworks.common.CommonResponse common = 1;
  PetInfo pet = 2;
}

// 获取宠物信息请求
message GetPetInfoRequest {
  string pet_id = 1;
}

// 获取宠物信息响应
message GetPetInfoResponse {
  greatestworks.common.CommonResponse common = 1;
  PetInfo pet = 2;
}

// 更新宠物信息请求
message UpdatePetRequest {
  string pet_id = 1;
  map<string, string> updates = 2;
}

// 更新宠物信息响应
message UpdatePetResponse {
  greatestworks.common.CommonResponse common = 1;
  PetInfo pet = 2;
}

// 宠物升级请求
message LevelUpPetRequest {
  string pet_id = 1;
  int32 experience_points = 2;
}

// 宠物升级响应
message LevelUpPetResponse {
  greatestworks.common.CommonResponse common = 1;
  PetInfo pet = 2;
  bool leveled_up = 3;
  int32 new_level = 4;
}

// 宠物进化请求
message EvolvePetRequest {
  string pet_id = 1;
  string target_species_id = 2;
  repeated string required_items = 3;
}

// 宠物进化响应
message EvolvePetResponse {
  greatestworks.common.CommonResponse common = 1;
  PetInfo pet = 2;
  bool evolved = 3;
  string new_species = 4;
}

// 获取玩家宠物列表请求
message GetPlayerPetsRequest {
  string player_id = 1;
  int32 limit = 2;
  int32 offset = 3;
}

// 获取玩家宠物列表响应
message GetPlayerPetsResponse {
  greatestworks.common.CommonResponse common = 1;
  repeated PetInfo pets = 2;
  greatestworks.common.PaginationInfo pagination = 3;
}

// 宠物信息
message PetInfo {
  string pet_id = 1;
  string player_id = 2;
  string species_id = 3;
  string name = 4;
  int32 level = 5;
  int32 experience = 6;
  int32 max_experience = 7;
  string rarity = 8;
  PetStats stats = 9;
  PetSkills skills = 10;
  int64 created_at = 11;
  int64 last_fed = 12;
  bool is_active = 13;
}

// 宠物属性
message PetStats {
  int32 health = 1;
  int32 max_health = 2;
  int32 attack = 3;
  int32 defense = 4;
  int32 speed = 5;
  int32 intelligence = 6;
  int32 loyalty = 7;
  int32 happiness = 8;
}

// 宠物技能
message PetSkills {
  repeated PetSkill skills = 1;
  int32 skill_points = 2;
}

// 宠物技能详情
message PetSkill {
  string skill_id = 1;
  string name = 2;
  string description = 3;
  int32 level = 4;
  int32 max_level = 5;
  PetSkillType skill_type = 6;
  int32 cooldown = 7;
  int32 mana_cost = 8;
}

// 宠物稀有度枚举
enum PetRarity {
  PET_RARITY_UNSPECIFIED = 0;
  PET_RARITY_COMMON = 1;         // 普通
  PET_RARITY_UNCOMMON = 2;       // 不常见
  PET_RARITY_RARE = 3;           // 稀有
  PET_RARITY_EPIC = 4;           // 史诗
  PET_RARITY_LEGENDARY = 5;      // 传说
  PET_RARITY_MYTHIC = 6;         // 神话
}

// 宠物品质枚举
enum PetQuality {
  PET_QUALITY_UNSPECIFIED = 0;
  PET_QUALITY_POOR = 1;          // 劣质
  PET_QUALITY_FAIR = 2;          // 一般
  PET_QUALITY_GOOD = 3;          // 良好
  PET_QUALITY_EXCELLENT = 4;     // 优秀
  PET_QUALITY_PERFECT = 5;       // 完美
}

// 宠物技能类型枚举
enum PetSkillType {
  PET_SKILL_TYPE_UNSPECIFIED = 0;
  PET_SKILL_TYPE_ATTACK = 1;     // 攻击技能
  PET_SKILL_TYPE_DEFENSE = 2;    // 防御技能
  PET_SKILL_TYPE_HEAL = 3;       // 治疗技能
  PET_SKILL_TYPE_BUFF = 4;       // 增益技能
  PET_SKILL_TYPE_DEBUFF = 5;     // 减益技能
  PET_SKILL_TYPE_PASSIVE = 6;    // 被动技能
  PET_SKILL_TYPE_ULTIMATE = 7;   // 终极技能
}

// 宠物心情枚举
enum PetMood {
  PET_MOOD_UNSPECIFIED = 0;
  PET_MOOD_VERY_HAPPY = 1;       // 非常开心
  PET_MOOD_HAPPY = 2;            // 开心
  PET_MOOD_NORMAL = 3;            // 正常
  PET_MOOD_SAD = 4;               // 难过
  PET_MOOD_VERY_SAD = 5;          // 非常难过
  PET_MOOD_ANGRY = 6;             // 愤怒
  PET_MOOD_SICK = 7;              // 生病
}

// 宠物训练类型枚举
enum PetTrainingType {
  PET_TRAINING_TYPE_UNSPECIFIED = 0;
  PET_TRAINING_TYPE_STRENGTH = 1;    // 力量训练
  PET_TRAINING_TYPE_AGILITY = 2;      // 敏捷训练
  PET_TRAINING_TYPE_INTELLIGENCE = 3; // 智力训练
  PET_TRAINING_TYPE_ENDURANCE = 4;   // 耐力训练
  PET_TRAINING_TYPE_BALANCED = 5;    // 平衡训练
}

// 宠物训练强度枚举
enum PetTrainingIntensity {
  PET_TRAINING_INTENSITY_UNSPECIFIED = 0;
  PET_TRAINING_INTENSITY_LIGHT = 1;   // 轻度训练
  PET_TRAINING_INTENSITY_MODERATE = 2; // 中度训练
  PET_TRAINING_INTENSITY_INTENSE = 3;  // 强度训练
  PET_TRAINING_INTENSITY_EXTREME = 4;  // 极限训练
}
